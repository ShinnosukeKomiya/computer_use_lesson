最後の授業では、これまでに学んだすべての概念をまとめていきます。
基本的なエージェントのアーキテクチャを理解し、その後、あなた自身のコンピュータで実行できるClaudeのコンピュータ使用機能をデモンストレーションします。
始めましょう。
このビデオでは、すべてをまとめていきます。私たちが一緒に学んだほぼすべてのことを、コンピュータを使用するエージェントという単一のユースケースにまとめていきます。
まず最初に知っておくべきことは、このエージェントを実行するためにいくつかのステップが必要だということです。比較的単純ですが、これはローカルマシンで実行する必要があります。
これはこのコースの一部とは考えられていません。これは純粋に、自分で追求することに興味がある方々のためのデモンストレーションです。
AnthropicにはGitHub上にAnthropicクイックスタートリポジトリがあり、コンピュータ使用デモが含まれています。
このコンピュータ使用デモは、コンピュータを使用するエージェントを比較的迅速に、ほぼ苦労なく立ち上げて実行するための実装の1つです。
必要なのはAPIキーだけです。リポジトリをクローンして、基本的なコマンドをいくつか実行します。
他のクイックスタートもありますが、これがコンピュータ使用に最も関連するものです。
まず、複数のクイックスタートを含むリポジトリをクローンします。Anthropicクイックスタートに移動し、コンピュータ使用デモに移動します。
次に、リードミーに戻ってこの行を実行します。少し長い行です。
これをコピーします。これは環境変数としてAnthropicのAPIキーを持っていることを前提としています。私はすでにセットアップしています。
これを貼り付けます。エンターを押して、クイックスタートリポジトリが魔法を行うのを少し待ちます。
これで起動しました。ブラウザでlocalhost 8080にアクセスします。
これがクイックスタートです。繰り返しますが、様々な実装があります。コンピュータを使用するエージェントの独自の実装を書くこともできますが、これが最も早く立ち上げる方法です。
もちろん、修正することもできます。左側にはチャットインターフェースがあり、そこでClaudeにメッセージを入力できます。右側では、Claudeが操作できるこのコンテナ化されたコンピュータを見ることができます。
現時点では、私は操作できません。これは単純なLinuxマシンであることがわかります。ドックには異なるアイコンがありますが、スクリーンコントロールをトグルしてオンにすると、操作してFirefoxを開くことができます。
人間として特定のことをしたい場合です。Claudeに引き継ぐ前に。
しかし、私が操作していないことを明確にするためにオフにして、とても単純なことを試してみましょう。
その前に、ここには様々なパラメータを入力できます。最大画像数を設定できます。AnthropicのファーストパーティAPIを使用するか、AWS bedrock Google Vertexを使用するかを決定できます。
カスタムシステムプロンプトのサフィックスも変更できます。これを最小化して、とても単純な例を試してみましょう。
「Anthropicの最近のアライメント作成に関する研究論文を探して、要約してください。」
とても単純です。これをモデルに送信すると、モデルは作業を開始します。
多くのツール使用が見られます。左側には、モデルが使用したいツールが表示されています。コンピュータ使用ツール、スクリーンショットツール、マウスの移動、左クリック、右クリックなどのツールについて少し触れました。
右側では、ディスプレイ上でモデルが行っている様々な動きや選択を見ることができます。Anthropicアライメント、フェイキング研究論文を検索しました。
今、この研究論文をクリックしました。PDFを開きました。
これをダウンロードしようとしています。左側で見られるように、curlを使用しています。これは、使用している様々なツールを示すログです。
了解です。ダウンロードが完了したようです。
bashツールを使用してチェックしています。
これがダウンロードしたコンテンツの一部です。これでこのコンテンツを要約してくれるはずです。
ここで良い要約が得られました。
繰り返しますが、とても単純な例です。しかし、私が強調したいのは、最初のプロンプトから最後の要約という目標まで、このモデルがエージェントとしてループで動作している10〜15のメッセージのやり取りがあるということです。
非常に単純なエージェントが、目標を達成しようとしているだけです。この場合、Anthropicの最近のアライメント追跡に関する研究論文を探して要約することです。
そのために、モデルはいくつかの異なるツールにアクセスできました。これが、AnthropicのAPIを呼び出し、コンピュータ使用ツールを提供する主要なエージェントループです。
これまで見てきたデモよりも少し複雑ですが、モデルに説明する長いプロンプトがあり、Ubuntuの仮想マシンを使用していること、Firefoxを開くことができ、アプリケーションをインストールできること、様々なツールにアクセスできることを説明しています。
現在の日付を伝え、下にスクロールすると何が見えるでしょうか？かなり単純なツールのコレクションです。これらのツールは他の場所で定義されていますが、私たちが話してきたのと全く同じタイプのツールです。
同じ構造です。ただし、コンピュータツールは特に、より興味深いものかもしれません。ここにはプロンプトキャッシングが含まれています。
さらに下には、ループでモデルに送信されるメッセージがあります。モデルが基本的に「完了した」と決定するまで、何度も何度も繰り返されます。
よく見ると、モデルがツールを呼び出したときに何をするかを決定するロジックがあります。ツールを実行し、正しいツール形式で応答を返します。これまでに説明したすべてのことです。
リポジトリにはツールというフォルダがあり、いくつかのツールが含まれています。すべてを説明することはしませんが、コンピュータを見てみましょう。コンピュータツールは、キーを入力する、文字Sを入力する、エンターキーを押す、マウスを移動する、左クリック、右クリック、中クリック、ダブルクリックを行い、重要なことにスクリーンショットを撮るツールです。
これ全体の基盤は、すべてスクリーンショットに依存しています。モデルは画面の現在の状態を取得するためにスクリーンショットを要求し、マウスをどこに移動させるか、どこに入力するか、どこをクリックするかを決定し、その後、別のスクリーンショットを取得して続行する可能性があります。
しかし、すべてはスクリーンショットに基づいています。
ここにはさらにロジックがあります。前述したように、スクリーンショットを私たちのClaudeモデルに最適な解像度に縮小する必要があるなど、一部は少し複雑です。
しかし、結局のところ、これはモデルの要求を受け取る関数です。左クリックが必要、スクリーンショットが必要、ダブルクリックが必要、またはマウスを移動させたいという要求です。
そして、その機能を実際に実装します。マウスを移動させ、クリックします。このファイルのコードは、それらの操作を実行するだけです。
単純なチャットボットの例と同様に、モデル自体はツールを実行していないことを覚えておいてください。モデルは「このツールを呼び出したい」という小さなブロックを出力しただけです。
ここでも全く同じです。私たちエンジニア、開発者、そしてこのクイックスタートリポジトリを使用している場合は、クリック、ドラッグ、スクリーンショットの実際の実装が必要です。
モデルは単にアクションを取りたいと伝えているだけです。
このログを少し詳しく見てみましょう。モデルは最初に「そのお手伝いをします」というテキストを出力します。Firefoxを使用すると言い、スクリーンショットを要求します。
スクリーンショットツールを使用したいというツールブロックを出力します。その後、現在の状態のスクリーンショットを提供します。その時点での見た目がこれです。
次に、モデルはこのスクリーンショットに基づいて、Firefoxアイコンがある場所を確認し、マウスをその場所に移動させることを決定します。
スクリーンショットでマウスがそこにあることがわかります。そして、左クリックツール使用ブロックを出力します。左クリックをしたいのです。これは使用できるツールの1つです。
左クリックすると、Firefoxが開き、このプロセスが繰り返されます。スクリーンショットを取得し、このナビゲーションバーに入力する必要があると判断します。
そのため、マウスをナビゲーションバーに移動させたいと考えます。これが続き、最終的に研究論文を見つけ、ダウンロードし、要約して、最後にこの良い要約を提供しました。
これがこのコースでこれまでに見てきたすべてのものと全く同じ基本的な基盤であることを信じられない場合、このHttpエクスチェンジログタブをクリックすると、ここの下のほうにある1つのログをスクロールダウンします。
これは会話全体の完全なログです。少し上にスクロールすると、かなり上にスクロールすると、私たちの最初のターンを含む、この会話のすべてのターンを見ることができます。
これはユーザーの役割を持っています。「Anthropicの研究論文を探してほしい」というものです。アシスタントの応答が見えます。テキストを含む応答があります。
そして、何が見えるでしょうか？ツールブロックがあります。タイプはツール使用です。そして、私たちはエンジニアとしてツール結果で応答します。
もちろん、ツール使用IDは、ツール使用について学んだときのように一致する必要があります。また、マルチモーダルプロンプティングでスクリーンショットを提供することも説明しました。
これがそれです。画像タイプのコンテンツブロックがあります。タイプはbase64です。メディアタイプはpngです。ここにデータがあります。
これはすべて比較的なじみのあるものであるはずです。明らかに少し異なるコンテキストですが。
これがユーザーメッセージです。そして、これを何度も何度も繰り返します。モデルはマウス移動ツール使用ブロックを出力し、対応するツール結果があります。このプロセスが繰り返され、繰り返され、繰り返されます。
単純なチャットボットよりも洗練されています。はるかに複雑です。しかし、その基盤となっているのは、正しい役割を持つメッセージの送信です。
正しいタイプのコンテンツ、画像とテキスト。もちろんツール使用も、モデルにツールを提供し、正しいツール結果ブロックで応答を返して、モデルに「あなたが発行したツールの結果はこれです」と伝えます。
プロンプトキャッシングやその他の説明した技術も含まれていますが、実際にはこのコースで触れたほぼすべてのトピックの良いまとめとなっています。
繰り返しますが、これはデモンストレーションです。これは今すぐあなたに行ってほしいことではありません。興味がある場合、好奇心がある場合は、自分のマシンでこれを行うことができます。
クイックスタートリポジトリにアクセスしてください。遊んでみると楽しいです。コンピュータ使用を最大限に活用する方法について、私たちのドキュメントやブログで多くの情報を確認できます。
これは、私たちが学んだすべてをまとめる良いまとめとなっています。これがコンピュータ使用の単純なデモンストレーションです。
